#!/bin/bash

# A simple list of commands that I regularly want to do.

platform=`uname`

# Setup the help and usage messages
progname=`basename $0`
tf=/tmp/$$.helpfile
cat > $tf <<EOF
$progname is a simple case statement for commands that I often want to 
run in developing chrome.  List:
	test		Run the cookie monster unit tests in debug mode
	perf		Run the cookie monster perf tests in release mode
			with repeat 10
	full		Run all tests known (debug) for cookies.
EOF
helpString="`cat $tf`" ;
rm -f $tf;
usageString="$progname [test|perf|full]";

# Parse all arguments.
while [ $# -ne 0 ]; do
    case $1 in 
    # Repeat as needed.
    -h|-\?)
	echo "$helpString" 1>&2;
	exit 1;
	;;
    --) shift;		# Everything after this point is taken as
	break;		# regular args.
	;;
    -*)
	echo "Usage: $usageString" 1>&2;
	exit 1;
	;;
    *)  break;
	;;
    esac
    shift;
done

# Check non-flag arguments.
if [ $# -ne 1 ]; then
    echo "Usage: $usageString" 1>&2;
    exit 1;
fi

case $1 in
    test)   case $platform in
        Linux)
	    echo 'chrmake net_unittests && out/Debug/net_unittests --gtest_filter=CookieMonstertest.*'
	    chrmake net_unittests && out/Debug/net_unittests --gtest_filter=CookieMonstertest.*
	    ;;
	Darwin)
	    echo 'xcodebuild -project net/net.xcodeproj -target net_unittests -configuration Debug -parallelizeTargets && xcodebuild/Debug/net_unittests --gtest_filter=CookieMonsterTest.*'
	    xcodebuild -project net/net.xcodeproj -target net_unittests -configuration Debug -parallelizeTargets && xcodebuild/Debug/net_unittests --gtest_filter=CookieMonsterTest.*
	    ;;
	CYGWIN*)
	    echo 'Command Unknown' 1>&2
	    exit 1
	    ;;
	esac
	;;
    perf)   case $platform in
        Linux)
		echo 'chrmake BUILDTYPE=Release net_perftests && out/Release/net_perftests --gtest_filter=CookieMonstertest.* --gtest_repeat=10'
		chrmake BUILDTYPE=Release net_perftests && out/Release/net_perftests --gtest_filter=CookieMonstertest.* --gtest_repeat=10
		;;
	Darwin)
	    echo 'xcodebuild -project net/net.xcodeproj -target net_perftests -configuration Release -parallelizeTargets && xcodebuild/Release/net_perftests --gtest_filter=CookieMonsterTest.* --gtest_repeat=10'
	    xcodebuild -project net/net.xcodeproj -target net_perftests -configuration Release -parallelizeTargets && xcodebuild/Release/net_perftests --gtest_filter=CookieMonsterTest.* --gtest_repeat=10
	    ;;
	CYGWIN*)
	    echo 'Command Unknown' 1>&2
	    exit 1
	    ;;
	esac
	;;
    full)   case $platform in
        Linux)
		echo 'chrmake net_unittests browser_tests unit_tests && out/Debug/net_unittests --gtest_filter=CookieMonsterTest.* && out/Debug/browser_tests --gtest_filter=ExtensionApiTest.Cookies && out/Debug/unit_tests --gtest_filter=CookiesTreeModelTest.OriginOrdering:CookiesViewTest.FilterRemove'
		chrmake net_unittests browser_tests unit_tests && out/Debug/net_unittests --gtest_filter=CookieMonsterTest.* && out/Debug/browser_tests --gtest_filter=ExtensionApiTest.Cookies && out/Debug/unit_tests --gtest_filter=CookiesTreeModelTest.OriginOrdering:CookiesViewTest.FilterRemove
		;;
	Darwin)
	    echo 'Command Unknown' 1>&2
	    exit 1
	    ;;
	CYGWIN*)
	    echo 'Command Unknown' 1>&2
	    exit 1
	    ;;
    esac
    ;;
esac

