#!/bin/sh

# Setup the help and usage messages
progname=`basename $0`
tf=/tmp/$$.helpfile
cat > $tf <<EOF
$progname lists the differences between multiple revisions of the same file.
Arguments:
	-s <starting revision>		# First revision used as a diff base
					# Defaults to 1
	-e <ending revision>		# Last revision used as a diff base
					# Defaults to head
	<filename>			# filename to diff
	[<diffnum>]			# Single diff to display
					# equivalent to
					# -s \`expr <diffnum> - 1\` -e <diffnum>
					# Incompatible with -s|-e
EOF
helpString="`cat $tf`" ;
rm -f $tf;
usageString="$progname [-s <srev> -e <erev> <filename> | <filename> [<diffnum>]]";

# Parse all arguments.
start=1
end=head
endsspecd=no;
while [ $# -ne 0 ]; do
    case $1 in 
    -s) 
	if [ $# -lt 2 ]; then
	    echo "Usage: $usageString" 1>&2;
	    exit 1;
	fi
	start=$2;
	endsspecd=yes;
	shift;
	;;
    -e) 
	if [ $# -lt 2 ]; then
	    echo "Usage: $usageString" 1>&2;
	    exit 1;
	fi
	end=$2;
	endsspecd=yes;
	shift;
	;;
    # Repeat as needed.
    -h|-\?)
	echo "$helpString" 1>&2;
	exit 1;
	;;
    --) shift;		# Everything after this point is taken as
	break;		# regular args.
	;;
    -*)
	echo "Usage: $usageString" 1>&2;
	exit 1;
	;;
    *)  break;
	;;
    esac
    shift;
done


# Check non-flag arguments.
if [ "$endsspecd" = "yes" ]; then
    if [ $# -ne 1 ]; then
	echo "Usage: $usageString" 1>&2;
	exit 1;
    fi
else
    if [ $# -gt 2 ]; then
	echo "Usage: $usageString" 1>&2;
	exit 1;
    elif [ $# -eq 2 ]; then
        start=`expr $2 - 1`;
        end=$2;
    else
	start=1;
	end=head;
    fi
fi

filename=$1;

if [ "$end" = "head" -o "$end" = "have" ]; then
    end=`p4 files $filename#$end | sed 's/^[^#]*#\([0-9]*\) .*$/\1/'`
fi

i=$start;
j=`expr $i + 1`
while [ $i != $end ]; do
    echo "#### Rev $j"
    p4 diff2 $filename#$i $filename#$j
    i=$j
    j=`expr $j + 1`
done

