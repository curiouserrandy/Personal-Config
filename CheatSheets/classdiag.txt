http://en.wikipedia.org/wiki/Class_diagram

-- Types of relationship:
	* Association [line]: Weakest form of connection between objects;
	  represented by a line.  May be annotated by numbers on
	  either side, and a name for the association and each end.

	  a -> b [headlabel="0..*", taillabel="1..*", label="label",
	          arrowhead="none"];
	  // Multiple head/tail labels on each side for name+association?

	* Aggregation [open diamond towards whole]: Represents a "has
	  a" or whole/part relationship.
	  part -> whole [arrowhead="odiamond"];

	* Composition [solid diamond towards whole]: Aggregation with
	  lifecycle matching (owner destruction->child destruction)
	  implications.
	  part -> whole [arrowhead="diamond"];
	  
	* Generalization/specialization [Arrow towards supertype/more
	  abstract type]: Inheritance in class diagrams.

	  subtype -> supertype [arrowhead="empty"];

	* Realization [Generalization with dotted line]:
	  Implementation of an interface.

	  subtype -> supertype[style=dashed, arrowhead="empty"];

	* Dependency
	  supertype -> subtype [style=dashed];

	## My invention, because I needed it.
	## TODO: Find a way to make this not fit into rank order.
	* Generated
	  ## May want to add weight=0, inside rank=same subgraph.
	  factory -> object [arrowhead=veevee];

-- Representing maps: Try representing them as a cluster subgraph
   (subgraph cluster_a), and drawing lines to the cluster.  

